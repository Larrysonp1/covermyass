name: Go build

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest ]
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3.2.0
        with:
          go-version: 1.18.4
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3.0.0

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Enforce Go formatted code
        if: matrix.os == 'ubuntu-latest'
        run: |
          make fmt
          if [[ -z $(git status --porcelain) ]]; then
            echo "Git directory is clean."
          else
            echo "Git directory is dirty. Run make fmt locally and commit any formatting fixes or generated code."
            git status --porcelain
            exit 1
          fi

      - name: Install tools
        run: make install-tools

      - name: Build
        run: make build

      - name: Lint
        if: matrix.os == 'ubuntu-latest'
        run: make lint

      - name: Test with coverage
        if: matrix.os == 'ubuntu-latest'
        run: make test

      - name: Test without coverage
        if: matrix.os != 'ubuntu-latest'
        run: gotestsum --format testname -- -mod=readonly -race ./...

      - name: Report code coverage
        if: matrix.os == 'ubuntu-latest'
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          go install github.com/mattn/goveralls@latest
          goveralls -coverprofile=./c.out -service=github
